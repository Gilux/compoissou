{% extends 'base.html.twig' %}

{% block body %}
    <div class="row">
        <div class="col-xs-12">
            <h1>
                Article
                <a href="{{ path('signalementarticle_new', {'idArticle':article.id}) }}" ><i class="glyphicon glyphicon-flash"></i></a>
            </h1>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-6">
            <table class="table">
                <tbody>
                <tr>
                    <th>Titre</th>
                    <td>{{ article.titre }}</td>
                </tr>
                <tr>
                    <th>Contenu</th>
                    <td>{{ article.contenu }}</td>
                </tr>
                <tr>
                    <th>Date de création</th>
                    <td>{% if article.dateCreation %}{{ article.dateCreation|date('Y-m-d H:i:s') }}{% endif %}</td>
                </tr>
                <tr>
                    <th>Date de modification</th>
                    <td>{% if article.dateModif %}{{ article.dateModif|date('Y-m-d H:i:s') }}{% endif %}</td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <h3>Thèmes</h3>
        </div>

        <div class="col-xs-12">
            <ul class="media-list">
                {% for theme in article.themes %}
                    <li class="media">
                        <div class="media-body">
                            <h4 class="media-heading">{{ theme.nom }} </h4>
                        </div>
                    </li>
                {% endfor %}
            </ul>
        </div>


    </div>

    <div class="row lead">
        <div class="col-xs-12">
            Moyenne : <span id="moyenne">{{ moyenne }}</span>
            {% if article.utilisateur.login != app.user.username %}
                <div id="stars" class="starrr"></div>
                Votre note : <span id="count">0</span>/5
                <button class="btn btn-primary btn-sm" id="sendNote">Ok</button>
            {% endif %}
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12">
            <h3>Commentaires</h3>
        </div>

        {{ form_start(edit_form) }}
            {{ form_widget(edit_form) }}
            <input class="btn btn-info" type="submit" value="Créer" />
        {{ form_end(edit_form) }}

        <div class="col-xs-12">
            <ul class="media-list">
                {% for com in article.commentaires %}
                    <li class="media">
                        <div class="media-left">
                            <a href="#">
                                <img class="media-object" src="{{ com.utilisateur.avatar }}" alt="avatar" style="width:64px; height:64px;">
                            </a>
                        </div>
                        <div class="media-body">
                            <h4 class="media-heading">{{ com.utilisateur.prenom }} {{ com.utilisateur.nom }} <small>{{ com.date|date("d/m/Y H:i") }}</small></h4>
                            {{ com.contenu }}
                            <a href="{{ path('signalement_new', {'idArticle':article.id, 'idComm':com.id}) }}" ><i class="glyphicon glyphicon-flash"></i></a>
                        </div>
                    </li>
                {% endfor %}
            </ul>
        </div>

    </div>

    <div class="row">
        <div class="col-xs-3">
            <ul class="list-group">
                <li class="list-group-item">
                    <a href="{{ path('article_index') }}">Retourner à la liste</a>
                </li>
                <li class="list-group-item">
                    <a href="{{ path('article_edit', { 'id': article.id }) }}">Éditer</a>
                </li>
                <li class="list-group-item text-right">
                    {{ form_start(delete_form) }}
                    <input class="btn btn-danger" type="submit" value="Delete">
                    {{ form_end(delete_form) }}
                </li>
            </ul>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        // Starrr plugin (https://github.com/dobtco/starrr)
        var __slice = [].slice;

        (function($, window) {
            var Starrr;

            Starrr = (function() {
                Starrr.prototype.defaults = {
                    rating: void 0,
                    numStars: 5,
                    change: function(e, value) {}
                };

                function Starrr($el, options) {
                    var i, _, _ref,
                        _this = this;

                    this.options = $.extend({}, this.defaults, options);
                    this.$el = $el;
                    _ref = this.defaults;
                    for (i in _ref) {
                        _ = _ref[i];
                        if (this.$el.data(i) != null) {
                            this.options[i] = this.$el.data(i);
                        }
                    }
                    this.createStars();
                    this.syncRating();
                    this.$el.on('mouseover.starrr', 'span', function(e) {
                        return _this.syncRating(_this.$el.find('span').index(e.currentTarget) + 1);
                    });
                    this.$el.on('mouseout.starrr', function() {
                        return _this.syncRating();
                    });
                    this.$el.on('click.starrr', 'span', function(e) {
                        return _this.setRating(_this.$el.find('span').index(e.currentTarget) + 1);
                    });
                    this.$el.on('starrr:change', this.options.change);
                }

                Starrr.prototype.createStars = function() {
                    var _i, _ref, _results;

                    _results = [];
                    for (_i = 1, _ref = this.options.numStars; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--) {
                        _results.push(this.$el.append("<span class='glyphicon .glyphicon-star-empty'></span>"));
                    }
                    return _results;
                };

                Starrr.prototype.setRating = function(rating) {
                    if (this.options.rating === rating) {
                        rating = void 0;
                    }
                    this.options.rating = rating;
                    this.syncRating();
                    return this.$el.trigger('starrr:change', rating);
                };

                Starrr.prototype.syncRating = function(rating) {
                    var i, _i, _j, _ref;

                    rating || (rating = this.options.rating);
                    if (rating) {
                        for (i = _i = 0, _ref = rating - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
                            this.$el.find('span').eq(i).removeClass('glyphicon-star-empty').addClass('glyphicon-star');
                        }
                    }
                    if (rating && rating < 5) {
                        for (i = _j = rating; rating <= 4 ? _j <= 4 : _j >= 4; i = rating <= 4 ? ++_j : --_j) {
                            this.$el.find('span').eq(i).removeClass('glyphicon-star').addClass('glyphicon-star-empty');
                        }
                    }
                    if (!rating) {
                        return this.$el.find('span').removeClass('glyphicon-star').addClass('glyphicon-star-empty');
                    }
                };

                return Starrr;

            })();
            return $.fn.extend({
                starrr: function() {
                    var args, option;

                    option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
                    return this.each(function() {
                        var data;

                        data = $(this).data('star-rating');
                        if (!data) {
                            $(this).data('star-rating', (data = new Starrr($(this), option)));
                        }
                        if (typeof option === 'string') {
                            return data[option].apply(data, args);
                        }
                    });
                }
            });
        })(window.jQuery, window);

        $(function() {
            return $(".starrr").starrr();
        });

        $( document ).ready(function() {

            $('#stars').on('starrr:change', function(e, value){
                $('#count').html(value);
            });

            $("#sendNote").click(function(e){
                e.preventDefault();
                var note = $("#count").html();
                $.post({
                    url: "{{ path("note_article",{"id": article.id } ) }}",
                    data: {
                        note: note
                    },
                    dataType:"JSON",
                    success:function(response){
                        var moyenne = response.moyenne;
                        $("#moyenne").html(moyenne);
                    }
                });
            });
        });
    </script>
{% endblock %}